#! /bin/bash

[ -z "$hosts_list" ] && die "Hosts file not found."

readonly ssh="/usr/bin/ssh"
readonly separator="---"

function_check() {
	[ ! -z $file ] && rm -f $file
	[ -z $host ] && hosts="$hosts_list" || hosts="$host"

	[ $file ] && verbose_msg "Writing to $file ... "
	local username="root"
	local fetched_output=

	for host in $hosts; do
		spinner "Gathering data "
		verbose_msgnl "Fetching data for ${BOLD}$host${RESET}... " 
		hostname=$($ssh ${username}@$host hostname)
		[ 1 -eq $get_uptime ] || [ 1 -eq $get_all ] && uptime=$($ssh ${username}@$host "cat /proc/uptime | cut -d' ' -f1") && uptime=$(convert_seconds $uptime)
		[ 1 -eq $get_users ] || [ 1 -eq $get_all ] && users=$($ssh ${username}@$host cat /etc/passwd | awk -F ':' '$3>=1000 {print $1}' | tr '\n' ',') && users=${users%,}
		[ 1 -eq $get_os ] || [ 1 -eq $get_all ] && osversion=$($ssh ${username}@$host cat /etc/os-release | grep "PRETT" | sed 's/.*="\(.*\)"/\1/' | tr ' ' '-')
		[ 1 -eq $get_ram ] || [ 1 -eq $get_all ] && ram=$($ssh ${username}@$host cat /proc/meminfo | grep MemTotal | awk '{$2=$2/(1024^2); print $2}' | xargs -I{} python -c 'print(round({}))') && ram=${ram%.*}
		[ 1 -eq $get_cpucores ] || [ 1 -eq $get_all ] && cpucores=$($ssh ${username}@$host lscpu | awk '/^CPU\(s\)/ {print $2}')
		
		output="$host $hostname ${uptime:-$separator} ${users:-$separator} ${osversion:-$separator} ${ram:-$separator} ${cpucores:-$separator}"

		if [ ! -z $file ]; then 
			echo "$output" >> $file
			verbose_msg "data for $host is appended to $file"
		else
			verbose_msg "done "
			fetched_output="${fetched_output}\n$output"
		fi

	end_spinner

	done
	echo

	if [ ! -z $file ]; then
		ask_confirmation "View $file now?"
		column -t -s ' ' -N "IP ADDRESS,HOSTNAME,UPTIME,USERS,OS VERSION,MEMORY (GiB),CPU(s)" -W 4 -R "MEMORY (GiB),CPU(s)" $file
	else
		echo -e "$fetched_output" | column -t -s ' ' -N "IP ADDRESS,HOSTNAME,UPTIME,USERS,OS VERSION,MEMORY (GiB),CPU(s)" -W 4 -R "MEMORY (GiB),CPU(s)"
	fi
	exit 0
}

