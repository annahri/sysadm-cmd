#! /usr/bin/env bash
source $modules_dir/formatting.shm
source $modules_dir/helper.shm

set -o errexit -o pipefail -o noclobber -o nounset
shopt -s globstar

export VERSION="1.0"

host_list="hosts"
export host_list=$(awk '!/^[#;]|localhost|127.0.0.1/ && NF {print $1}' $host_list)

declare -a modules_list

load_modules() {	
	if [ -d $functions_dir ]; then
		rm -f $modules_tmpfile
		for function in $functions_dir/*.shm; do
			source $function
			echo "$function" >> $modules_tmpfile
		done
		unset function
	else
		die "$modules_dir is missing."
	fi
	store_modules_list
}

store_modules_list() {
	modules=$(declare -F | awk '/check|modify|install|remove/ {print $NF}'|sort);
	for module in $modules; do
		modules_list+=("$module")
	done
	export modules_list
}

list_modules() {
	echo -e "${BOLD}Loaded modules:${RESET}"
	for module in ${modules_list[@]}; do
		echo "   $module"
	done
	exit
}

die() {
	echo -e "$*"
	exit 1
}

load_modules

do_check() {
	debug_opts
	# Filter options
	verify_options
}

verify_options() {
	declare -a available_opts=( "uptime" "users" "os" "ram" "load" )

	for option in ${options[@]}; do
		if ! array_contains "$option" "${available_opts[@]}" ; then
			echo -e "Unknown option: ${RED}$option${RESET}"
			die "Available options: ${available_opts[@]}"
		fi
	done
}

debug_opts() {
	printf "Captured options : "
	for opt in ${options[@]}; do
		printf "${GREEN}$opt${RESET} "
	done
	printf "\n"
}

action_check() {
	declare -a options=()
	host=
	file=
	until [ $# -eq 0 ]; do
		case $1 in
			-o|--options)
				options=(${2//,/ })
				shift 2
				;;
			-h|--host)
				host="$2"
				shift 2
				;;
			-f|--file)
				file="$2"
				shift
				;;
			*)
				die "Unknown option $1"
				;;
		esac
	done
	[ ${#options[@]} -eq 0 ] && options=( "all" )

	do_check
}

action_modify() {
	echo "Modify"
}

action_install() {
	echo "Install"
}

action_remove() {
	echo "Remove"
}
