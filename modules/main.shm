#! /usr/bin/env bash
source $modules_dir/formatting.shm
source $modules_dir/helper.shm

set -o errexit -o pipefail -o noclobber -o nounset
shopt -s globstar

export VERSION="1.0"


declare -a modules_list=()
declare -a available_opts=( uptime users os ram cpucores all )

usage_check() {
	echo "	Prints out server(s) information(s) into STDOUT or into a specified file"
	echo
	echo -e "	${BOLD}Usage:${RESET} $cmd check [-h <IP ADDR>|-o <OPTIONS>|-f <FILE>|-v|--help]"
	echo -e "	  ${BOLD}-h --host${RESET} <IP ADDR>"
    echo -e "	        Get the information(s) from a desired HOST instead of everything listed in /etc/hosts."
	echo -e "	  ${BOLD}-o --options${RESET} <OPTIONS>"
    echo -e "	        Get only specified information, separated by comma. Available options: ${BOLD}all cpucores mem osversion uptime users${RESET}."
	echo -e "	  ${BOLD}-f --file${RESET} <FILE>"
    echo -e "	        Write output to file instead of STDOUT."
	echo	
	echo -e "	  ${BOLD}--help ?${RESET}"
    echo -e "	        Print this info."
	echo -e "	  ${BOLD}-v --verbose${RESET}"
    echo -e "	        Verbose output."
	exit 0
}

load_modules() {	
	if [ -d $functions_dir ]; then
		rm -f $modules_tmpfile
		for function in $functions_dir/*.shm; do
			source $function
			echo "$function" >> $modules_tmpfile
		done
		unset function
	else
		die "$modules_dir is missing."
	fi
}

load_hosts() {
	hosts_file="/etc/hosts"
	hosts_list=$(awk '!/^[#;]|localhost|127.0.0.1/ && NF {print $1}' $hosts_file)
	[ "$hosts_file" = "/etc/hosts" ] && [ -z "$hosts_list" ] && die "Please"
}

die() {
	echo -e "$1"
	exit "$2"
}

load_modules

do_check() {
	load_hosts
	verify_options
	function_check
}

verify_options() {
	for option in ${options[@]}; do
		if ! array_contains "$option" "${available_opts[@]}" ; then
			echo -e "Unknown option: ${RED}$option${RESET}"
			die "Available options: ${available_opts[@]}"
		fi
	done

	assign_options
}

assign_options() {
	for option in ${options[@]}; do
		export get_${option}=1
	done
}

debug_opts() {
	printf "Getting info for : "
	for opt in ${options[@]}; do
		printf "${GREEN}$opt${RESET} "
	done
	printf "\n"
}

action_check() {
	declare -a options=()
	host=
	file=
	verbose=0

	get_all=0
	get_uptime=0
	get_users=0
	get_users=0
	get_os=0
	get_ram=0
	get_cpucores=0

	until [ $# -eq 0 ]; do
		case $1 in
			-o|--options)
				options=(${2//,/ })
				shift 2
				;;
			-h|--host)
				[ -z "${2:-}" ] && die "$cmd check -h ${BOLD}<IP-ADDR>${RESET}\nOr did you mean help? Use ${BOLD}--help${RESET} or ${BOLD}?${RESET}"
				host="$2"
				shift 2
				;;
			-f|--file)
				file="$2"
				shift 2
				;;
			-v|--verbose)
				verbose=1
				shift
				;;
			--help|?)
				usage_check
				;;
			*)
				die "Unknown option $1"
				;;
		esac
	done
	[ ${#options[@]} -eq 0 ] && options=( "all" )	

	do_check
}

action_modify() {
	echo "Modify"
}

action_install() {
	echo "Install"
}

action_remove() {
	echo "Remove"
}
